package com.test.extends_polymorphism_03.finalKeywordTest;

/*
* final修饰的类无法被继承，所以其之中的方法无法被覆盖重写，但是其可以继承其他类，
* abstract 与final无法同时修饰，本身产生矛盾
*
* 如果一个类的方法被final修饰，则此类的继承者无法覆盖重写此方法
*
* 修饰局部变量时，该变量不会再被修改，实际上是该变量只存在一次赋值过程，如final int num； num =3;
*   原理为：final修饰的变量的指向地址值不会再改变
* 当final修饰一个对象时，实际上地址值不会变化，但是存储的对象本身是可变的，所以对象的一些属性可以进行变更
*
* 修饰成员变量时，必须手动赋值，也就一开始修饰时就要给该成员变量赋值（也可以通过构造方法，此时就需要保证所有的构造方法均能给此成员变量赋值），否则无意义
*/

public final class  MyClass {


}
